//Colors
$clr-accent-300: hsl(180, 100%, 60%);
$clr-accent-400: hsl(180, 60%, 50%);

$clr-neutral-100: hsl(0, 0%, 99%);
$clr-neutral-200: hsl(0, 0%, 80%);
$clr-neutral-300: hsl(0, 0%, 66%);
$clr-neutral-400: hsl(0, 0%, 50%);
$clr-neutral-500: hsl(0, 0%, 33%);
$clr-neutral-600: hsl(0, 0%, 16%);
$clr-neutral-700: hsl(0, 0%, 11%);
$clr-neutral-900: hsl(0, 0%, 0%);

// Font Family
$ff-primary: Roboto, Arial, sans-serif;

// Font Weight
$fw-reg: 400;
$fw-bold: 700;

// Font Sizing
$fs-200: clamp(0.63rem, calc(0.82rem + -0.16vw), 0.79rem);
$fs-300: clamp(0.75rem, calc(0.9rem + 0.04vw), 0.95rem);
$fs-400: clamp(0.9rem, calc(0.98rem + 0.13vw), 1.13rem);
$fs-500: clamp(1.13rem, calc(1.05rem + 0.37vw), 1.5rem);
$fs-600: clamp(1.27rem, calc(1.12rem + 0.73vw), 2rem);
$fs-700: clamp(1.42rem, calc(1.18rem + 1.24vw), 2.66rem);
$fs-800: clamp(1.6rem, calc(1.21rem + 1.95vw), 3.55rem);
$fs-900: clamp(1.8rem, calc(1.22rem + 2.93vw), 4.74rem);

// Spacing
$spc-100: clamp(0.25rem, calc(0.19rem + 0.31vw), 0.56rem);
$spc-200: clamp(0.5rem, calc(0.43rem + 0.38vw), 0.88rem);
$spc-300: clamp(0.75rem, calc(0.68rem + 0.38vw), 1.13rem);
$spc-400: clamp(1rem, calc(0.86rem + 0.69vw), 1.69rem);
$spc-500: clamp(1.5rem, calc(1.35rem + 0.75vw), 2.25rem);
$spc-600: clamp(2rem, calc(1.73rem + 1.38vw), 3.38rem);
$spc-700: clamp(3rem, calc(2.7rem + 1.5vw), 4.5rem);
$spc-800: clamp(4rem, calc(3.45rem + 2.75vw), 6.75rem);

$app-padding: clamp(0.5rem, calc(0.1rem + 1.75vw), 2.25rem);

// Misc
$border-radius: 8px;
$shadow: 4px 4px 8px rgba(0, 0, 0, 0.5);

$frost-opacity-200: 0.12;
$frost-opacity-400: 0.24;
$frost-opacity-600: 0.48;
$frost-opacity-800: 0.7;
$media-query-primary: 57rem;
$media-query-secondary: 45rem;
$media-query-tertiary: 23.125rem;

body {
  font-family: $ff-primary;
  font-size: $fs-400;
  color: $clr-neutral-100;

  background-image: url(bg-1.png);
  background-size: cover;
  background-position: center;
}

@mixin container {
  // background-color: rgba($clr-neutral-100, 0.33);
  position: relative;
  opacity: 1;
}

@mixin standard-flex {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  gap: $spc-100;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin grow {
  height: 1rem;
  flex-grow: 1;
}

@mixin card {
  border-radius: $border-radius * 2;
  color: $clr-neutral-100;
  // padding: $spc-300;
}

@mixin datalist {
  display: grid;
  justify-items: center;
  align-items: center;
  padding: $spc-300;
  gap: $spc-100;
}

@mixin background-frost($opacity, $hover-opacity) {
  background-color: rgba($clr-neutral-100, $opacity);
  backdrop-filter: blur(8px);
  transition: 0.12s;

  &:hover,
  &:active {
    background-color: rgba($clr-neutral-100, $hover-opacity);
    backdrop-filter: blur(0px);
    transition: 0.12s;
  }
}

@mixin limit-lines($lines) {
  $line-height: 1.2rem;
  line-height: $line-height; /* Set the line-height */
  max-height: $line-height * $lines; /* Set max-height to line-height multiplied by the number of lines (2 in this case) */
  overflow: hidden; /* Hide any text that goes beyond max-height */
  text-overflow: ellipsis; /* Optional: use ellipsis to indicate text overflow */
  display: -webkit-box; /* Required for -webkit-line-clamp to work */
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $lines; /* Limit the number of displayed lines to 2 */
}

#app {
  @include flex-column;
  height: 100%;
  padding: $app-padding;
}

.heading {
  font-size: $fs-500;
  font-weight: bold;
  margin-bottom: $spc-100;

  &.condition {
    @include standard-flex;
    align-items: center;
    justify-content: flex-start;
    font-size: $fs-500;
  }
}

.label-icon {
  display: flex;
  justify-content: center;
  height: 1.5rem;
  aspect-ratio: 1/1;

  img {
    margin-right: $spc-100;
  }
}

.scrollable {
  overflow: auto;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}
.no-pointer-events {
  pointer-events: none;
}

#upper-section {
  @include grow;
  display: grid;
  grid-template-areas:
    'search time info'
    'search time events';
  justify-content: space-between;
  align-items: space-between;
  gap: $spc-200;

  .container {
    @include container;
    @include flex-column;

    overflow: hidden;
    height: 100%;

    &#search {
      grid-area: search;
    }
    &#time {
      grid-area: time;
    }
    &#current {
      grid-area: info;
      justify-self: end;
    }
    &#event {
      grid-area: events;
    }
  }

  @media (max-width: $media-query-primary) {
    grid-template-areas:
      'search search'
      'time info'
      'none events';

    input,
    button {
      padding: 6px;
      padding-inline: 12px;
    }

    #search {
      @include standard-flex();
      flex-direction: row-reverse;
      height: min-content;

      #history {
        height: 100%;
        overflow: auto;
        margin-left: auto;
        .list {
          @include standard-flex();
          justify-content: start;
        }
      }
    }

    #time {
      justify-self: start;
    }

    .location-time-wrapper,
    .current-weather-wrapper {
      height: 100%;
    }

    #event {
      ::-webkit-scrollbar {
        display: none;
      }
    }
    @media (max-width: $media-query-secondary) {
      grid-template-areas:
        'search search'
        'time info'
        'events events';

      #event {
        .upcoming-events-wrapper {
          width: 100%;
        }
      }
    }
    @media (max-width: $media-query-tertiary) {
      grid-template-areas:
        'search'
        'time'
        'info'
        'events';

      #time {
        justify-self: center;

        .location-time-wrapper {
          height: 100%;
        }
      }

      .container#current {
        justify-self: center;
        width: 100%;
        .current-weather-wrapper {
          width: 100%;
        }
      }
    }
  }
}

#search {
  #input-wrapper {
    @include flex-column;
    margin-bottom: $spc-200;
    min-width: 10rem;
    max-width: 17.5rem;

    input {
      @include background-frost($frost-opacity-200, $frost-opacity-400);
      padding-left: $spc-100;
      border-radius: $border-radius * 2;
      transition: 0.12s;

      // &:hover {
      //   background-color: $clr-neutral-100;
      //   transition: 0.12s;
      // }
    }

    ::placeholder {
      color: $clr-neutral-100;
    }

    :invalid {
      background-color: red;
    }
  }

  #history {
    @include flex-column;
    @include grow;
    margin-bottom: $spc-200;

    .list {
      @include flex-column;
      overflow: auto;
      height: 100%;
      gap: $spc-100;

      li {
        button {
          @include background-frost($frost-opacity-200, $frost-opacity-200);
          @include card();
          width: 100%;
        }
      }
    }
  }
}

#time {
  @media (min-width: $media-query-primary) {
    position: absolute;
    top: 0;
    left: 75%;
    transform: translate(-50%);
  }

  .location-time-wrapper {
    display: grid;
    grid-template-areas:
      'location location'
      'time time'
      'day date'
      'astro astro';

    .location {
      grid-area: location;
    }
    .current-weekday {
      grid-area: day;
      justify-self: end;
    }
    .current-date {
      grid-area: date;
      justify-self: start;
    }
    .current-time {
      grid-area: time;
      justify-self: center;
    }
    .astro {
      grid-area: astro;
    }
  }

  .location {
    text-align: center;
    font-size: calc($fs-700 * 0.9);
    font-weight: 600;
    letter-spacing: 0.75px;
    .country {
      font-size: calc($fs-600 * 0.9);
    }
  }

  .current-time {
    font-size: $fs-800;
    margin-top: calc($spc-300 * -1);
  }

  .current-weekday {
    margin-right: $spc-100;
  }

  .astro {
    @include standard-flex();
    justify-content: center;
    align-items: center;
    margin-top: $spc-500;
  }

  .sunrise,
  .sunset {
    @include flex-column();
    @include background-frost($frost-opacity-200, $frost-opacity-200);
    @include card();
    padding: $spc-200 $spc-300 $spc-100;
    gap: $spc-100;

    align-items: center;
  }
}

#current {
  align-items: center;
  .current-weather-wrapper {
    @include background-frost($frost-opacity-200, $frost-opacity-200);
    @include card;
  }

  .data-list {
    @include datalist();
    grid-template-areas:
      'temp condition'
      'feelslike feelslike'
      'humidity wind '
      'uv uv'
      'updated updated';

    .condition {
      grid-area: condition;
    }
    .temp-c {
      grid-area: temp;
    }
    .feelslike-c {
      grid-area: feelslike;
    }
    .humidty {
      grid-area: humidity;
    }
    .wind-kph {
      grid-area: wind;
    }
    .uv {
      grid-area: uv;
    }
    .last-updated {
      grid-area: updated;
    }
  }
}

#event {
  @include grow;
  direction: rtl;
  padding-bottom: $spc-200;

  .upcoming-events-wrapper {
    width: clamp(15rem, 60vw, 22.5rem);
    overflow-y: auto;
    height: 100%;

    > :not(:first-child) {
      margin-block: $spc-200;
    }
  }

  .upcoming-event {
    direction: ltr;
    @include standard-flex;
    @include card;
    @include background-frost($frost-opacity-200, $frost-opacity-200);
    height: clamp(5rem, 1rem + 10vh, 8rem);

    img {
      @include card;
      height: 100%;
      aspect-ratio: 1 / 1;
      object-fit: cover;
    }

    .data-list {
      @include datalist();
      justify-items: start;
      grid-template-areas:
        'name'
        'date'
        'type';

      .name {
        @include limit-lines(2);
        grid-area: name;
      }
      .date {
        grid-area: date;
      }
      .type {
        @include limit-lines(1);
        grid-area: type;
      }
    }
  }
}

#forecast {
  #daily,
  #hourly {
    display: none;
    overflow: auto;

    &.active {
      display: block;
    }
  }

  #daily {
    overflow: hidden;
  }

  .hourly-list,
  .daily-list {
    display: grid;
    grid-auto-flow: column;
    grid-auto-columns: 1fr;
    gap: $spc-200;
  }

  .forecast-data {
    @include card;
    @include background-frost($frost-opacity-200, $frost-opacity-200);
    min-width: 15rem;
  }

  .daily-list .data-list {
    @include datalist();
    grid-template-areas:
      'day condition'
      'minmax uv'
      'humidity precipitation';

    .day {
      grid-area: day;
    }
    .mintemp-c {
      grid-area: minmax;
    }
    .uv {
      grid-area: uv;
    }
    .daily-chance-of-snow,
    .daily-chance-of-rain {
      grid-area: precipitation;
    }
    .avghumidity {
      grid-area: humidity;
    }
  }

  .hourly-list .data-list {
    @include datalist();
    grid-template-areas:
      'time condition'
      'temp uv'
      'humidity wind';

    .time {
      grid-area: time;
    }
    .condition {
      grid-area: condition;
    }
    .temp-c {
      grid-area: temp;
    }
    .feelslike-c {
      grid-area: feelslike;
    }
    .humidty {
      grid-area: humidity;
    }
    .wind-kph {
      grid-area: wind;
    }
    .uv {
      grid-area: uv;
    }
  }
}

/***---FOOTER---***/

footer {
  min-height: 5vh;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-top: auto;
}

#copyright {
  font-size: 1.24rem;
  font-weight: 700;
  text-decoration-line: none;
  letter-spacing: 0.5px;
  color: var(--clr-neutral-300);
}

.fa-github {
  font-size: 1.38rem;
  transition: transform 0.4s ease-in-out;
}

.fa-github:hover {
  transform: rotate(360deg) scale(1.2);

  border: 24px 24px 24px 24px solid red;
}

/***---SCROLLBAR---***/

/* WebKit-based browsers (Chrome, Safari, etc.) */
::-webkit-scrollbar {
  width: 32px;
  height: 32px; /* Height of the scrollbar on horizontal containers */
}

/* Track (the background of the scrollbar) */
::-webkit-scrollbar-track {
  //Mimic margin
  box-shadow: inset 0 0 100px 100px $clr-neutral-200;
  border: solid 14px transparent;

  border-radius: 999px;
}

/* Thumb (the actual scroll handle) */
::-webkit-scrollbar-thumb {
  //Mimic margin
  box-shadow: inset 0 0 100px 100px $clr-neutral-400;

  border: solid 12px transparent;
  border-radius: 999px;

  min-height: 45px;
  min-width: 45px;
}

/* Hover effect for the thumb */
::-webkit-scrollbar-thumb:hover {
  box-shadow: inset 0 0 12px 12px $clr-neutral-400;
  border: solid 10px transparent;
  opacity: 0.33;
  transition: 0.16s;
}

/* Firefox */
* {
  scrollbar-width: thin; /* Width of the scrollbar */
  scrollbar-color: #888 #f0f0f0; /* Thumb color and track color */
}
